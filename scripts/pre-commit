#!/bin/bash
###
### pre commit hook.
###
### Usage:
###  pre-commit <input> <output>
###
### Options:
###   <input>       Input file to read.
###   <output>      Output file to write. Use '-' for stdout.
###   -h, --help    Show this message.
###   -k, --kernel-config kernel config file
###

KCONF=/proc/config

while [ $# -gt 0 ] && [[ "$1" = -* ]]; do
    case "$1" in
        -h | --help) help 1 ;;
        -k | --kernel-config)
            shift
            KCONF="$1"
            ;;
        *) die "Unrecognized opt: $1, showing usage." "$(help)" ;;
    esac
    shift
done

printf "\nBackup portage...\n"
pushd "$(git rev-parse --show-toplevel)"
if ! mount | grep -q portage; then
    rsync -Pa --exclude=00cpu-flags --exclude='savedconfig' --exclude='gnupg' --exclude=priv \
          /etc/portage/* portage/
    sed -i '/MAKEOPTS/d' portage/make.conf
fi


printf "\nBackup kernel config...\n"
config_dir=profiles/kernel.conf
config_file=$config_dir/kernel-config-$(LANG=C lscpu | grep -i 'vendor' | awk -F ':' '{print $2}' | xargs)

mkdir -p "${config_dir}"
if [[ "${KCONF}" = "/proc/config" ]]; then
    conf=$(gzip -d -c /proc/config)
else
    conf=$(cat "${KCONF}")
fi

echo "${conf}" | tail -n +4 | sed -E "/^CONFIG_(AS|GCC|CLANG|CC|LD|LLD)_VERSION/d" > ${config_file}

printf "\nAdd to stage area....\n"
git add "${config_file}" portage

popd

printf "\nDone...\n"

exit 0
