From c3bd10878dc722aaacc29da2db4b7288fca547e3 Mon Sep 17 00:00:00 2001
From: yangyingchao <yang.yingchao@qq.com>
Date: Wed, 4 Sep 2024 14:56:40 +0800
Subject: [PATCH] fix issue: Client::handleOutputDone() is called multiple
 times for same monitor

---
 include/client.hpp |  2 ++
 src/client.cpp     | 15 +++++++++++----
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/include/client.hpp b/include/client.hpp
index 0e68f002..bb6105b9 100644
--- a/include/client.hpp
+++ b/include/client.hpp
@@ -4,6 +4,7 @@
 #include <gdk/gdk.h>
 #include <gdk/gdkwayland.h>
 #include <wayland-client.h>
+#include <unordered_set>
 
 #include "bar.hpp"
 #include "config.hpp"
@@ -56,6 +57,7 @@ class Client {
   std::list<struct waybar_output> outputs_;
   std::unique_ptr<CssReloadHelper> m_cssReloadHelper;
   std::string m_cssFile;
+  std::unordered_set<std::string> m_monitors_inprocess;
 };
 
 }  // namespace waybar
diff --git a/src/client.cpp b/src/client.cpp
index 63a9276a..9f15772f 100644
--- a/src/client.cpp
+++ b/src/client.cpp
@@ -78,11 +78,18 @@ void waybar::Client::handleOutputDone(void *data, struct zxdg_output_v1 * /*xdg_
       output.xdg_output.reset();
       spdlog::debug("Output detection done: {} ({})", output.name, output.identifier);
 
-      auto configs = client->getOutputConfigs(output);
-      if (!configs.empty()) {
-        for (const auto &config : configs) {
-          client->bars.emplace_back(std::make_unique<Bar>(&output, config));
+      if (client->m_monitors_inprocess.contains(output.name)) {
+        spdlog::debug("Ignore output detection done event: {} ({})", output.name,
+                      output.identifier);
+      } else {
+        client->m_monitors_inprocess.emplace(output.name);
+        auto configs = client->getOutputConfigs(output);
+        if (!configs.empty()) {
+          for (const auto &config : configs) {
+            client->bars.emplace_back(std::make_unique<Bar>(&output, config));
+          }
         }
+        client->m_monitors_inprocess.erase(output.name);
       }
     }
   } catch (const std::exception &e) {
-- 
2.45.3

